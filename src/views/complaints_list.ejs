<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Quejas</title>
    <link rel="stylesheet" href="/complaint_list_style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">

    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

    <style>
        body {
            background-color: #f8f9fa;
            font-size: 16px;
        }

        .dataTables_wrapper .dataTables_paginate {
            text-align: center !important;
            margin-top: 20px !important;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            background: #339BBF !important;
            background-color: #339BBF !important;
            background-image: none !important;
            border: 2px solid #339BBF !important;
            border-radius: 8px !important;
            color: #ffffff !important;
            padding: 8px 16px !important;
            margin: 0 4px !important;
            font-weight: 500 !important;
            font-size: 14px !important;
            transition: all 0.3s ease !important;
            cursor: pointer !important;
            text-decoration: none !important;
            display: inline-block !important;
            box-shadow: 0 2px 4px rgba(51, 155, 191, 0.2) !important;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button:link,
        .dataTables_wrapper .dataTables_paginate .paginate_button:visited {
            background: #339BBF !important;
            background-color: #339BBF !important;
            color: #ffffff !important;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
            background: #2980b9 !important;
            background-color: #2980b9 !important;
            border-color: #2980b9 !important;
            color: #ffffff !important;
            transform: translateY(-2px) !important;
            box-shadow: 0 4px 8px rgba(41, 128, 185, 0.3) !important;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.current {
            background: #10B981 !important;
            background-color: #10B981 !important;
            border-color: #10B981 !important;
            color: #ffffff !important;
            font-weight: 600 !important;
            box-shadow: 0 4px 8px rgba(16, 185, 129, 0.3) !important;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover {
            background: #059669 !important;
            background-color: #059669 !important;
            border-color: #059669 !important;
            color: #ffffff !important;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.disabled {
            background: #e5e7eb !important;
            background-color: #e5e7eb !important;
            border-color: #e5e7eb !important;
            color: #9ca3af !important;
            cursor: not-allowed !important;
            opacity: 0.6 !important;
            box-shadow: none !important;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover {
            background: #e5e7eb !important;
            background-color: #e5e7eb !important;
            border-color: #e5e7eb !important;
            color: #9ca3af !important;
            transform: none !important;
            box-shadow: none !important;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button:focus {
            outline: 2px solid #3b82f6 !important;
            outline-offset: 2px !important;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.previous,
        .dataTables_wrapper .dataTables_paginate .paginate_button.next {
            font-weight: 600 !important;
            padding: 8px 20px !important;
        }

        .custom_button {
            height: 37px;
            background-color: #007BFF;
            border-radius: 8px;
            font-size: 1.2rem;
            font-weight: 600;
            color: #fff;
        }

        .custom_button:hover {
            background-color: #007BFF;
            color: #fff
        }

        .icon-bg {
            width: 80px;
            height: 80px;
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 20px auto;
            font-size: 2.5rem;
        }

        .title {
            font-weight: 700;
            font-size: 2rem;
            margin-top: 20px;
        }

        .subtitle {
            color: #6c757d;
            margin-bottom: 40px;
            font-size: 1.1rem;
            line-height: 1.5;
        }

        .custom_table {
            border-radius: 20px;
            overflow: hidden;
            border: none;
            width: 100% !important;
        }

        .custom_table td {
            border: none;
            color: #6c757d;
            font-size: 1rem;
            padding: 12px 15px !important;
            vertical-align: middle;
        }

        .custom_th {
            background-color: #10B981 !important;
            color: #fff !important;
            font-size: 1.2rem;
            border: none !important;
            font-weight: 600 !important;
            text-align: center !important;
            padding: 15px !important;
        }

        .custom_table td:first-child {
            width: 50%;
        }

        .custom_table td:last-child {
            text-align: left;
            word-wrap: break-word;
        }

        .captcha-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 30px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            width: 90%;
        }

        .captcha-wrapper {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 100%;
        }

        .captcha-message {
            text-align: center;
            margin-bottom: 20px;
            color: #6c757d;
            font-size: 1.1rem;
            line-height: 1.4;
        }

        .g-recaptcha {
            display: flex;
            justify-content: center;
            align-items: center;
            transform-origin: 0 0;
        }

        /* ========== MEDIA QUERIES ========== */
        @media screen and (max-width: 992px) {
            .container {
                padding: 20px;
            }

            .title {
                font-size: 1.8rem;
                margin-top: 15px;
            }

            .subtitle {
                font-size: 1rem;
                margin-bottom: 30px;
                padding: 0 10px;
            }

            .icon-bg {
                width: 70px;
                height: 70px;
                font-size: 2rem;
            }

            .custom_table td {
                font-size: 0.95rem;
                padding: 10px 12px !important;
            }

            .custom_th {
                font-size: 1.1rem !important;
                padding: 12px !important;
            }
        }

        @media screen and (max-width: 768px) {
            body {
                font-size: 15px;
            }

            .container {
                padding: 15px;
            }

            .title {
                font-size: 1.6rem;
                margin-top: 10px;
            }

            .subtitle {
                font-size: 0.95rem;
                margin-bottom: 25px;
            }

            .icon-bg {
                width: 60px;
                height: 60px;
                font-size: 1.8rem;
                margin-bottom: 15px;
            }

            .captcha-container {
                margin: 20px auto;
                padding: 15px;
                width: 95%;
            }

            .captcha-message {
                font-size: 0.95rem;
                margin-bottom: 15px;
            }

            .g-recaptcha {
                transform: scale(0.9);
            }

            .custom_table {
                margin-top: 20px !important;
            }

            .custom_table td {
                font-size: 0.9rem;
                padding: 8px 10px !important;
                line-height: 1.4;
            }

            .custom_th {
                font-size: 1rem !important;
                padding: 10px !important;
            }

            .custom_button {
                font-size: 1rem;
                height: 40px;
                padding: 0 15px;
            }

            .dataTables_wrapper .dataTables_paginate .paginate_button {
                padding: 6px 12px !important;
                font-size: 0.85rem !important;
                margin: 0 2px !important;
            }

            .navbar .custom_button {
                height: 40px;
                font-size: 1rem;
                padding: 0 12px;
            }

            .navbar svg {
                height: 25px !important;
                width: 25px !important;
            }
        }

        @media screen and (max-width: 576px) {
            body {
                font-size: 14px;
            }

            .container {
                padding: 10px;
            }

            .title {
                font-size: 1.4rem;
                margin-top: 5px;
            }

            .subtitle {
                font-size: 0.9rem;
                margin-bottom: 20px;
            }

            .icon-bg {
                width: 50px;
                height: 50px;
                font-size: 1.5rem;
                margin-bottom: 10px;
                border-radius: 15px;
            }

            .captcha-container {
                margin: 15px auto;
                padding: 12px;
                border-radius: 8px;
            }

            .captcha-message {
                font-size: 0.9rem;
                margin-bottom: 12px;
            }

            .g-recaptcha {
                transform: scale(0.85);
            }

            .custom_table {
                border-radius: 15px;
            }

            .custom_table td {
                font-size: 0.85rem;
                padding: 8px !important;
            }

            .custom_th {
                font-size: 0.9rem !important;
                padding: 8px !important;
            }

            .custom_button {
                font-size: 0.9rem;
                height: 36px;
                padding: 0 12px;
            }

            .dataTables_wrapper .dataTables_paginate .paginate_button {
                padding: 5px 10px !important;
                font-size: 0.8rem !important;
                margin: 0 1px !important;
            }

            .navbar .custom_button {
                height: 36px;
                font-size: 0.9rem;
            }

            .navbar svg {
                height: 20px !important;
                width: 20px !important;
                margin-right: 5px !important;
            }
        }

        @media screen and (max-width: 400px) {
            .title {
                font-size: 1.3rem;
            }

            .subtitle {
                font-size: 0.85rem;
            }

            .custom_table td {
                font-size: 0.8rem;
                padding: 6px !important;
            }

            .custom_th {
                font-size: 0.85rem !important;
            }

            .custom_button {
                font-size: 0.85rem;
                height: 34px;
            }

            .dataTables_wrapper .dataTables_paginate .paginate_button {
                padding: 4px 8px !important;
                font-size: 0.75rem !important;
            }

            .captcha-message {
                font-size: 0.85rem;
            }
        }

        /* Estilos específicos para la tabla en móviles */
        @media screen and (max-width: 768px) {
            .custom_table thead {
                display: none;
            }

            .custom_table tr {
                display: block;
                margin-bottom: 15px;
                border-radius: 10px;
                overflow: hidden;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            }

            .custom_table td {
                display: flex;
                justify-content: space-between;
                align-items: center;
                text-align: right !important;
                padding: 10px !important;
                width: 100% !important;
            }

            .custom_table td:before {
                content: attr(data-label);
                font-weight: bold;
                color: #10B981;
                margin-right: 10px;
                text-align: left;
                flex: 1;
            }

            .custom_table td:first-child {
                background-color: #f0f0f0;
                font-weight: bold;
            }

            .custom_table td:nth-of-type(1):before {
                content: "Entidad";
            }

            .custom_table td:nth-of-type(2):before {
                content: "Descripción";
            }

            .custom_table td:nth-of-type(3):before {
                content: "Estado";
            }

            .custom_table td:nth-of-type(4):before {
                content: "Acciones";
            }
        }

        .alert-info {
            border-radius: 10px;
            text-align: center;
            margin: 20px auto;
            max-width: 500px;
        }

        /* Estilos para badges de estado */
        .badge {
            font-size: 0.9rem;
            padding: 0.5rem 0.8rem;
            border-radius: 8px;
            font-weight: 600;
        }

        /* Mejorar el grupo de botones */
        .btn-group .btn {
            margin: 0 2px;
        }

        @media (max-width: 768px) {
            .btn-group {
                display: flex;
                flex-direction: column;
                gap: 5px;
            }
            
            .btn-group .btn {
                margin: 0;
                font-size: 0.85rem;
            }

            .badge {
                font-size: 0.8rem;
                padding: 0.4rem 0.6rem;
            }
        }

        table.dataTable {
            width: 100% !important;
            border-collapse: collapse !important;
        }

        table.dataTable th,
        table.dataTable td {
            box-sizing: border-box !important;
            padding: 12px 15px !important;
            word-wrap: break-word;
        }

        @media screen and (max-width: 768px) {

            table.dataTable th,
            table.dataTable td {
                padding: 8px 10px !important;
                display: flex !important;
                width: 100% !important;
                box-sizing: border-box !important;
            }
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-light bg-white shadow-sm mb-3">
        <div class="container-fluid">
            <a href="/" class="btn custom_button d-flex align-items-center">
                <svg xmlns="http://www.w3.org/2000/svg" height="35" viewBox="0 0 24 24" width="35" fill="#fff"
                    class="me-2">
                    <path d="M0 0h24v24H0z" fill="none" />
                    <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
                </svg>
                <span class="d-none d-sm-inline">Volver al inicio</span>
                <span class="d-inline d-sm-none">Inicio</span>
            </a>
        </div>
    </nav>

    <div class="container text-center px-3">
        <div class="icon-bg icon-blue mb-2" style="background:#10B981;">
            <svg xmlns="http://www.w3.org/2000/svg" height="40" viewBox="0 0 24 24" width="40" fill="#fff">
                <path d="M0 0h24v24H0z" fill="none" />
                <path
                    d="M19 5v14H5V5h14m1.1-2H3.9c-.5 0-.9.4-.9.9v16.2c0 .4.4.9.9.9h16.2c.4 0 .9-.5.9-.9V3.9c0-.5-.5-.9-.9-.9zM11 7h6v2h-6V7zm0 4h6v2h-6v-2zm0 4h6v2h-6zM7 7h2v2H7zm0 4h2v2H7zm0 4h2v2H7z" />
            </svg>
        </div>
        <h1 class="title">Consultar Quejas</h1>
        <p class="subtitle">Consultar las quejas realizadas y genera un reporte de todas ellas.</p>

        <div class="captcha-container">
            <div class="captcha-wrapper">
                <p class="captcha-message mb-3">
                    Por favor, verifica que eres humano para ver la lista de quejas
                </p>
                <div class="g-recaptcha" data-sitekey="6Le9BKkrAAAAAMZo94h6oYaXGcPZ_eVYJ_biKgvA"
                    data-callback="onCaptchaSuccess"></div>
            </div>
        </div>

        <div class="container px-0" id="complaints-container" style="display:none;">
            <% if (complaints.length> 0) { %>
                <div class="table-responsive">
                    <table class="table custom_table table-striped mt-3 mb-4">
                        <thead>
                            <tr>
                                <th class="custom_th">Entidad</th>
                                <th class="custom_th">Descripción</th>
                                <th class="custom_th">Estado de Queja</th>
                                <th class="custom_th">Fecha de Creación</th>
                                <th class="custom_th">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% complaints.forEach(c=> { %>
                                <tr>
                                    <td data-label="Entidad">
                                        <%= c.public_entity %>
                                    </td>
                                    <td data-label="Descripción">
                                        <%= c.description %>
                                    </td>
                                    <td data-label="Estado de Queja">
                                        <% 
                                        let statusClass = '';
                                        let statusText = '';
                                        switch(c.complaint_status) {
                                            case 'abierta':
                                                statusClass = 'badge bg-warning text-dark';
                                                statusText = 'Abierta';
                                                break;
                                            case 'en_revision':
                                                statusClass = 'badge bg-info text-white';
                                                statusText = 'En Revisión';
                                                break;
                                            case 'cerrada':
                                                statusClass = 'badge bg-success text-white';
                                                statusText = 'Cerrada';
                                                break;
                                            default:
                                                statusClass = 'badge bg-secondary';
                                                statusText = 'Desconocido';
                                        }
                                        %>
                                        <span class="<%= statusClass %>"><%= statusText %></span>
                                    </td>
                                    <td data-label="Fecha de Creación">
                                        <% 
                                        const createdDate = new Date(c.created_at);
                                        const formattedDate = createdDate.toLocaleDateString('es-ES', {
                                            year: 'numeric',
                                            month: 'short',
                                            day: 'numeric',
                                            hour: '2-digit',
                                            minute: '2-digit'
                                        });
                                        %>
                                        <span class="text-muted">
                                            <%= formattedDate %>
                                        </span>
                                    </td>
                                    <td data-label="Acciones">
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-info btn-sm view-comments-btn" 
                                                    data-id="<%= c.id_complaint %>" 
                                                    data-entity="<%= c.public_entity %>">
                                                <i class="bi bi-chat-dots"></i> Comentarios
                                            </button>
                                            <button class="btn btn-primary btn-sm change-status-btn" 
                                                    data-id="<%= c.id_complaint %>" 
                                                    data-entity="<%= c.public_entity %>"
                                                    data-current-status="<%= c.complaint_status %>">
                                                <i class="bi bi-arrow-repeat"></i> Cambiar Estado
                                            </button>
                                            <button class="btn btn-danger btn-sm delete-btn" 
                                                    data-id="<%= c.id_complaint %>" 
                                                    data-entity="<%= c.public_entity %>">
                                                <i class="bi bi-trash"></i> Borrar
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
                <% } else { %>
                    <div class="alert alert-info mt-4">No hay quejas registradas.</div>
                    <% } %>

                        <div class="d-flex justify-content-center mt-3 mb-4">
                            <a href="/complaints/stats" class="btn custom_button">
                                Generar Reporte
                            </a>
                        </div>
        </div>
    </div>

        <!-- Modal para confirmación de borrado -->
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirmar Borrado de Queja</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        <form id="deleteForm">
                            <input type="hidden" id="delete-complaint-id" name="id_complaint">
                            <div class="mb-3">
                                <label for="delete-password" class="form-label">Contraseña para borrar:</label>
                                <input type="password" class="form-control" id="delete-password" name="password" required>
                            </div>
                            <div id="delete-error" class="text-danger mb-2" style="display:none;"></div>
                            <button type="submit" class="btn btn-danger">Borrar</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal para cambiar estado de queja -->
        <div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="statusModalLabel">Cambiar Estado de Queja</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        <form id="statusForm">
                            <input type="hidden" id="status-complaint-id" name="id_complaint">
                            <div class="mb-3">
                                <label for="complaint-status" class="form-label">Nuevo Estado:</label>
                                <select class="form-select" id="complaint-status" name="complaint_status" required>
                                    <option value="">Selecciona un estado</option>
                                    <option value="abierta">Abierta</option>
                                    <option value="en_revision">En Revisión</option>
                                    <option value="cerrada">Cerrada</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="status-password" class="form-label">Contraseña para cambiar estado:</label>
                                <input type="password" class="form-control" id="status-password" name="password" required>
                            </div>
                            <div id="status-error" class="text-danger mb-2" style="display:none;"></div>
                            <button type="submit" class="btn btn-primary">Cambiar Estado</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal para ver y agregar comentarios -->
        <div class="modal fade" id="commentsModal" tabindex="-1" aria-labelledby="commentsModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="commentsModalLabel">Comentarios Anónimos</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        <div id="complaint-info" class="mb-3 p-3 bg-light rounded">
                            <strong>Entidad:</strong> <span id="modal-entity"></span><br>
                            <strong>Descripción:</strong> <span id="modal-description"></span>
                        </div>
                        
                        <!-- Formulario para agregar comentario -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Agregar Comentario Anónimo</h6>
                            </div>
                            <div class="card-body">
                                <form id="commentForm">
                                    <input type="hidden" id="comment-complaint-id" name="id_complaint">
                                    <div class="mb-3">
                                        <label for="comment-text" class="form-label">Comentario (mínimo 10 caracteres):</label>
                                        <textarea class="form-control" id="comment-text" name="comment_text" rows="3" 
                                                  placeholder="Escribe tu comentario anónimo aquí..." required minlength="10"></textarea>
                                        <div class="form-text">Los comentarios son completamente anónimos.</div>
                                    </div>
                                    <div id="comment-error" class="text-danger mb-2" style="display:none;"></div>
                                    <button type="submit" class="btn btn-success">
                                        <i class="bi bi-chat-left-text"></i> Agregar Comentario
                                    </button>
                                </form>
                            </div>
                        </div>
                        
                        <!-- Lista de comentarios existentes -->
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Comentarios Existentes</h6>
                            </div>
                            <div class="card-body">
                                <div id="comments-list">
                                    <div class="text-center">
                                        <div class="spinner-border" role="status">
                                            <span class="visually-hidden">Cargando...</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
        // Modal y lógica de borrado
        let deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        let deleteForm = document.getElementById('deleteForm');
        let deleteError = document.getElementById('delete-error');
        let deleteIdInput = document.getElementById('delete-complaint-id');

        // Modal y lógica de cambio de estado
        let statusModal = new bootstrap.Modal(document.getElementById('statusModal'));
        let statusForm = document.getElementById('statusForm');
        let statusError = document.getElementById('status-error');
        let statusIdInput = document.getElementById('status-complaint-id');
        let statusSelect = document.getElementById('complaint-status');

        // Modal y lógica de comentarios
        let commentsModal = new bootstrap.Modal(document.getElementById('commentsModal'));
        let commentForm = document.getElementById('commentForm');
        let commentError = document.getElementById('comment-error');
        let commentIdInput = document.getElementById('comment-complaint-id');

        document.addEventListener('click', function(e) {
            // Manejar click en botón de borrar
            if (e.target.closest('.delete-btn')) {
                const btn = e.target.closest('.delete-btn');
                deleteIdInput.value = btn.getAttribute('data-id');
                deleteError.style.display = 'none';
                deleteForm.reset();
                deleteModal.show();
            }

            // Manejar click en botón de cambiar estado
            if (e.target.closest('.change-status-btn')) {
                const btn = e.target.closest('.change-status-btn');
                statusIdInput.value = btn.getAttribute('data-id');
                const currentStatus = btn.getAttribute('data-current-status');
                
                // Limpiar selección anterior
                statusSelect.value = '';
                statusError.style.display = 'none';
                document.getElementById('status-password').value = '';
                
                statusModal.show();
            }

            // Manejar click en botón de ver comentarios
            if (e.target.closest('.view-comments-btn')) {
                const btn = e.target.closest('.view-comments-btn');
                const complaintId = btn.getAttribute('data-id');
                const entity = btn.getAttribute('data-entity');
                
                // Configurar el modal
                commentIdInput.value = complaintId;
                document.getElementById('modal-entity').textContent = entity;
                commentError.style.display = 'none';
                commentForm.reset();
                commentIdInput.value = complaintId; // Restaurar después del reset
                
                // Cargar detalles de la queja y comentarios
                loadComplaintDetails(complaintId);
                commentsModal.show();
            }
        });

        deleteForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const id = deleteIdInput.value;
            const password = document.getElementById('delete-password').value;
            fetch('/complaints/delete', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id_complaint: id, password })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    deleteModal.hide();
                    Swal.fire({
                        icon: 'success',
                        title: 'Queja borrada',
                        text: 'La queja fue eliminada correctamente',
                        confirmButtonColor: '#2296c7'
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    deleteError.textContent = data.message || 'Contraseña incorrecta';
                    deleteError.style.display = 'block';
                }
            })
            .catch(() => {
                deleteError.textContent = 'Error al borrar la queja';
                deleteError.style.display = 'block';
            });
        });

        statusForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const id = statusIdInput.value;
            const newStatus = statusSelect.value;
            const password = document.getElementById('status-password').value;
            
            fetch('/complaints/update-status', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ 
                    id_complaint: id, 
                    complaint_status: newStatus, 
                    password 
                })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    statusModal.hide();
                    let statusText = '';
                    switch(newStatus) {
                        case 'abierta': statusText = 'Abierta'; break;
                        case 'en_revision': statusText = 'En Revisión'; break;
                        case 'cerrada': statusText = 'Cerrada'; break;
                    }
                    Swal.fire({
                        icon: 'success',
                        title: 'Estado actualizado',
                        text: `El estado de la queja se cambió a: ${statusText}`,
                        confirmButtonColor: '#2296c7'
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    statusError.textContent = data.message || 'Error al cambiar el estado';
                    statusError.style.display = 'block';
                }
            })
            .catch(() => {
                statusError.textContent = 'Error al cambiar el estado de la queja';
                statusError.style.display = 'block';
            });
        });

        // --- CAPTCHA LOCALSTORAGE ---
        const CAPTCHA_KEY = 'captcha_token';
        const CAPTCHA_TIME_KEY = 'captcha_token_time';
        const CAPTCHA_EXPIRATION_MINUTES = 30;

        function isCaptchaValid() {
            const token = localStorage.getItem(CAPTCHA_KEY);
            const time = localStorage.getItem(CAPTCHA_TIME_KEY);
            if (!token || !time) return false;
            const now = Date.now();
            const diff = (now - parseInt(time, 10)) / 1000 / 60;
            return diff < CAPTCHA_EXPIRATION_MINUTES;
        }

        function showComplaintsList() {
            document.querySelector('.captcha-container').style.display = 'none';
            document.getElementById('complaints-container').style.display = 'block';
            if ($('.custom_table').length && !$.fn.DataTable.isDataTable('.custom_table')) {
                $('.custom_table').DataTable({
                    paging: true,
                    pageLength: 5,
                    lengthChange: false,
                    searching: false,
                    info: false,
                    ordering: false,
                    responsive: true
                });
            }
        }
        // Función para cargar detalles de la queja y comentarios
        function loadComplaintDetails(complaintId) {
            const commentsList = document.getElementById('comments-list');
            commentsList.innerHTML = `
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                </div>
            `;

            fetch(`/complaints/${complaintId}/details`)
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        // Actualizar información de la queja
                        document.getElementById('modal-description').textContent = data.complaint.description;
                        
                        // Mostrar comentarios
                        displayComments(data.comments);
                    } else {
                        commentsList.innerHTML = `
                            <div class="alert alert-danger">
                                Error al cargar los detalles: ${data.message}
                            </div>
                        `;
                    }
                })
                .catch(err => {
                    console.error('Error:', err);
                    commentsList.innerHTML = `
                        <div class="alert alert-danger">
                            Error al cargar los comentarios. Por favor, intenta de nuevo.
                        </div>
                    `;
                });
        }

        // Función para mostrar comentarios
        function displayComments(comments) {
            const commentsList = document.getElementById('comments-list');
            
            if (comments.length === 0) {
                commentsList.innerHTML = `
                    <div class="text-center text-muted">
                        <i class="bi bi-chat"></i>
                        <p class="mt-2">No hay comentarios aún. ¡Sé el primero en comentar!</p>
                    </div>
                `;
                return;
            }

            const commentsHtml = comments.map(comment => {
                const date = new Date(comment.created_at);
                const formattedDate = date.toLocaleDateString('es-ES', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                });

                return `
                    <div class="comment-item border-bottom pb-3 mb-3">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <span class="badge bg-secondary">Anónimo</span>
                            <small class="text-muted">${formattedDate}</small>
                        </div>
                        <p class="mb-0">${comment.comment_text}</p>
                    </div>
                `;
            }).join('');

            commentsList.innerHTML = commentsHtml;
        }

        // Manejar envío de comentario
        commentForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const complaintId = commentIdInput.value;
            const commentText = document.getElementById('comment-text').value;
            
            if (commentText.trim().length < 10) {
                commentError.textContent = 'El comentario debe tener al menos 10 caracteres';
                commentError.style.display = 'block';
                return;
            }

            fetch('/complaints/comments', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ 
                    id_complaint: complaintId, 
                    comment_text: commentText.trim()
                })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    commentError.style.display = 'none';
                    document.getElementById('comment-text').value = '';
                    
                    Swal.fire({
                        icon: 'success',
                        title: 'Comentario agregado',
                        text: 'Tu comentario anónimo ha sido agregado exitosamente',
                        confirmButtonColor: '#2296c7',
                        timer: 2000
                    });
                    
                    // Recargar comentarios
                    loadComplaintDetails(complaintId);
                } else {
                    commentError.textContent = data.message || 'Error al agregar el comentario';
                    commentError.style.display = 'block';
                }
            })
            .catch(err => {
                console.error('Error:', err);
                commentError.textContent = 'Error al agregar el comentario. Por favor, intenta de nuevo.';
                commentError.style.display = 'block';
            });
        });
        function onCaptchaSuccess(token) {
            fetch('/verify-captcha', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ token: token })
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        localStorage.setItem(CAPTCHA_KEY, token);
                        localStorage.setItem(CAPTCHA_TIME_KEY, Date.now().toString());
                        showComplaintsList();
                    } else {
                        alert('Verificación fallida. Por favor, intenta de nuevo.');
                        grecaptcha.reset();
                    }
                })
                .catch(err => {
                    console.error('Error:', err);
                    alert('Error al verificar. Por favor, intenta de nuevo.');
                    grecaptcha.reset();
                });
        }

        window.addEventListener('DOMContentLoaded', function() {
            if (isCaptchaValid()) {
                showComplaintsList();
            }
        });

        // Ajustar el reCAPTCHA al tamaño de pantalla
        function adjustRecaptcha() {
            if (window.innerWidth <= 768) {
                document.querySelector('.g-recaptcha').style.transform = 'scale(0.85)';
            } else {
                document.querySelector('.g-recaptcha').style.transform = 'scale(1)';
            }
        }

        window.addEventListener('resize', adjustRecaptcha);
        window.addEventListener('load', adjustRecaptcha);
    </script>
</body>

</html>